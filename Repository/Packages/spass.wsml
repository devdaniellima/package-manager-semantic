// Variant
wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-rule"

// Namespace
namespace {
	_"br.com.devdaniellima/RepositoryOntology/Packages"
}

// Definition
ontology spass
	nfp
		dc#title hasValue "Repository Packages"
		dc#contributor hasValue "Daniel Lima"
		dc#format hasValue "text/plain"
		dc#language hasValue "en-US" 
	endnfp

importsOntology {
	_"../Repository.wsml",
	_"dpkg.wsml",
	_"install-info.wsml",
	_"libc6.wsml"
}

// Sources instances

instance Source__S1 memberOf Source
	uri hasValue "http://br.archive.ubuntu.com/ubuntu"

// Packages instances

instance P0__spass memberOf Package
	package hasValue "spass"
	packageSource hasValue Source__S1
	priority hasValue "optional"
	section hasValue "universe/science"
	installedSize hasValue "3849"
	maintainer hasValue "Original-Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>"
	architecture hasValue "amd64"
	version hasValue "3.7-4"
	fileName hasValue "pool/universe/s/spass/spass_3.7-4_amd64.deb"
	size hasValue "1003264"
	md5sum hasValue "4a8411fde525b48a34634cb8eace18ea"
	sha1 hasValue "3e632f7a4916dbd79dd62602fac4a26852f2b08c"
	sha256 hasValue "b58c9db85481cc7f6ee7751588c072aa2a18187c042307cb0f4889f0e140b132"
	description hasValue "automated theorem prover for first-order logic with equality"
	descriptionMd5 hasValue "bc89b2923428eac81fa58fc7ea00984e"
	homepage hasValue "http://www.mpi-inf.mpg.de/departments/automation-of-logic/software/spass-workbench/classic-spass-theorem-prover/"
	depends hasValue "dpkg (>= 1.15.4) | install-info, libc6 (>= 2.14)"

instance DepAtom__0 memberOf DependencyAtom
	package hasValue "dpkg"
	comparison hasValue ">="
	version hasValue "1.15.4"

relationInstance depends(P0__spass,0,DepAtom__0)

instance DepAtom__1 memberOf DependencyAtom
	package hasValue "install-info"
	comparison hasValue ""
	version hasValue ""

relationInstance depends(P0__spass,0,DepAtom__1)

instance DepAtom__2 memberOf DependencyAtom
	package hasValue "libc6"
	comparison hasValue ">="
	version hasValue "2.14"

relationInstance depends(P0__spass,1,DepAtom__2)

