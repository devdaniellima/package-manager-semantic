// Variant
wsmlVariant _"http://www.wsmo.org/wsml/wsml-syntax/wsml-rule"

// Namespace
namespace {
	_"br.com.devdaniellima/RepositoryOntology/Packages"
}

// Definition
ontology ruby_http_cookie
	nfp
		dc#title hasValue "Repository Packages"
		dc#contributor hasValue "Daniel Lima"
		dc#format hasValue "text/plain"
		dc#language hasValue "en-US" 
	endnfp

importsOntology {
	_"../Repository.wsml"
}

// Sources instances

instance Source__S1 memberOf Source
	uri hasValue "http://br.archive.ubuntu.com/ubuntu"

// Packages instances

instance P0__ruby_http_cookie memberOf Package
	package hasValue "ruby-http-cookie"
	packageSource hasValue Source__S1
	priority hasValue "optional"
	section hasValue "universe/ruby"
	installedSize hasValue "96"
	maintainer hasValue "Original-Debian Ruby Extras Maintainers <pkg-ruby-extras-maintainers@lists.alioth.debian.org>"
	architecture hasValue "all"
	version hasValue "1.0.3-1"
	fileName hasValue "pool/universe/r/ruby-http-cookie/ruby-http-cookie_1.0.3-1_all.deb"
	size hasValue "22232"
	md5sum hasValue "3cd5eaf18f19bbdc1a987d93ee08fb95"
	sha1 hasValue "f245b1fc56d697b7e29cc25ef59f084c111dd9c6"
	sha256 hasValue "672ac3c99493ee92ec0d0f711d864c6ef22d5710a59023624304c605488f6f3c"
	description hasValue "biblioteca Ruby para tratar cookies HTTP baseada na RFC 6265"
	descriptionMd5 hasValue "16cac6ab303c54c40bedc64ae3023afc"
	homepage hasValue "https://github.com/sparklemotion/http-cookie"
	depends hasValue "ruby | ruby-interpreter, ruby-domain-name"

instance DepAtom__0 memberOf DependencyAtom
	package hasValue "ruby"
	comparison hasValue ""
	version hasValue ""

relationInstance depends(P0__ruby_http_cookie,0,DepAtom__0)

instance DepAtom__1 memberOf DependencyAtom
	package hasValue "ruby-interpreter"
	comparison hasValue ""
	version hasValue ""

relationInstance depends(P0__ruby_http_cookie,0,DepAtom__1)

instance DepAtom__2 memberOf DependencyAtom
	package hasValue "ruby-domain-name"
	comparison hasValue ""
	version hasValue ""

relationInstance depends(P0__ruby_http_cookie,1,DepAtom__2)

